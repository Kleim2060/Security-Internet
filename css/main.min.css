a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}img{margin:0;font:inherit}fieldset,figure,form{font:inherit;vertical-align:baseline}figure,form,img{padding:0;border:0}.slick-list:focus,:focus{outline:0}.slick-slide img,article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1;font:1.4rem "Montserrat",sans-serif;color:#23283b}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}.slick-slide.slick-loading img,[hidden]{display:none}a:active,a:hover{outline:0}figure,form{margin:0}fieldset{border:0;margin:0;padding:0}button,input{line-height:normal}button,select{text-transform:none}button[disabled],html input[disabled]{cursor:default}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list,.slick-slider,.slick-track{position:relative;display:block}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{left:0;top:0;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-dots{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;left:50%;bottom:-50px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.partners .slick-track{width:5850px!important}.partners .slick-slide{width:100%!important;max-width:195px}.slick-dots li{list-style:none;margin:0 10px}.slick-dots button{background:#dedeff;font-size:0;width:10px;height:12px;border:0;border-radius:50px}.slick-active button{background:#e6514a}html{font-size:62.5%}.course__level--item.active:hover,.programs__look:hover a,.red{color:#e6514a}a:focus{outline:0}body._active,body.no-scroll{overflow:hidden}body._active .nav{text-align:center;-ms-flex-wrap:wrap;flex-wrap:wrap}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}.header{background:#fff;width:100%;height:9rem;padding:0 0 8rem;-webkit-box-shadow:0 5px 20px 0 #1c1c1c1a;box-shadow:0 5px 20px 0 #1c1c1c1a;top:0;right:0;z-index:1000;position:fixed}.header__top,body._active .nav{display:-webkit-box;display:-ms-flexbox;display:flex}.header__top{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid #dedeff}.header__nav{margin-top:1rem}.header__logo{z-index:1000;-webkit-transform:translateY(-7%);-ms-transform:translateY(-7%);transform:translateY(-7%)}.header__logo img{width:75px}.header__bottom{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.container{position:relative;width:100%;max-width:1170px;margin:0 auto}.page{overflow:hidden}.nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-left:5rem}.nav__link{color:#23283b;font-weight:800;margin-left:3.2rem;text-decoration:none;-webkit-transition:color .2s linear;-o-transition:color .2s linear;transition:color .2s linear}.nav__link:hover{color:#3035c3}.social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.social__item{margin-right:2rem}.social__icon{width:auto;height:2rem;fill:#23283b;-webkit-transition:fill .1s linear;-o-transition:fill .1s linear;transition:fill .1s linear}.programs__look:hover svg,.social__icon:hover{fill:#e6514a}.social__icon__footer{fill:#fff}.number{display:-webkit-box;display:-ms-flexbox;display:flex}.course__level--item.active .course__detail,.number__footer{display:block}.number__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:17rem;margin-left:2.8rem}.number__item__footer{margin-left:0;margin-bottom:1rem}.number__icon{margin-right:1.2rem}.number__text{text-transform:uppercase;font-weight:900;color:#23283b;text-decoration:none}.number__text__footer{color:#fff;font-weight:400}.number__text:hover{text-decoration:underline}.button{display:-webkit-box;display:-ms-flexbox;display:flex;width:-webkit-max-content;width:-moz-max-content;width:max-content;background:#e6514a;border:0;cursor:pointer;padding:.87em 1.75em;border-radius:4rem;-webkit-transition:background-color .2s linear;-o-transition:background-color .2s linear;transition:background-color .2s linear}.button__big{padding:1em 4em;margin:0 auto}.button__ml{margin-left:0}.button__bigs{padding:1em 4.62em;margin:0 auto}.button:hover{background:#be312b}.button__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.button__ico{margin-right:1.2rem}.button__text{margin:0 auto;color:#fff;font-size:1.6rem;font-weight:700;text-decoration:none}.main{margin-top:140px}.intro{display:-webkit-box;display:-ms-flexbox;display:flex;padding:20rem 0 14rem}.intro__content{left:0}.intro__suptitle{font:700 1.6rem "Lato",sans-serif;padding-top:3rem;color:#3035c3}.intro__title{padding-top:2.8rem;font-weight:800;font-size:5.6rem;line-height:130%;width:50%;padding-bottom:5.8rem}.intro__photo{position:absolute;right:0;top:0}.intro__photography{width:605px;border-radius:0 4.5rem;-webkit-box-shadow:0 10px 24px rgba(73,95,211,.12);box-shadow:0 10px 24px rgba(73,95,211,.12)}.section{text-align:center;padding-top:5rem}.section__first-child,.section__gray{padding:5rem 0;background:#f8f8ff}.section__gray{padding:8rem 0}.section__top{padding-top:15rem}.section__suptitle{text-transform:uppercase;font-family:"Lato",sans-serif;margin-left:5rem}.section__suptitle__ttn{text-transform:none}.section__suptitle::before{background:#e6514a;content:"";display:block;position:relative;margin:0 auto;top:.8rem;right:7.5rem;z-index:2;width:4rem;height:.1rem}.section__title{padding-top:2rem;font-weight:800;font-size:4.8rem}.section__text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;max-width:850px;margin:2rem auto 0}.programs{padding-top:5.2rem}.programs__inner{display:-webkit-box;display:-ms-flexbox;display:flex;padding-bottom:10rem}.programs__item{position:relative;width:25%;margin-right:2rem}.programs__item:last-child{margin-right:0}.programs__price{border:.1rem solid #dedeff;padding:3.2rem 2rem;min-height:18rem}.programs__pay{font-size:1.8rem;font-weight:900;color:#3035c3;line-height:2.2rem;margin-bottom:1.6rem}.programs__pay--bg{font-size:4rem}.programs__pay--text{font-size:2.2rem}.programs__text{font-size:1.6rem;font-weight:700;line-height:2rem}.programs__list{padding:3.2rem 0 8rem}.programs__list--item{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:1.2rem}.programs__list--text{font-family:"Lato",sans-serif;text-align:left;margin-left:3.2rem}.programs__list--icon{position:absolute;margin-right:1.6rem}.programs__look{display:-webkit-box;display:-ms-flexbox;display:flex;padding:2rem 0 0 1rem;cursor:pointer;-webkit-transition:color .2s linear;-o-transition:color .2s linear;transition:color .2s linear}.programs__footer{position:absolute;left:4%;bottom:0}.programs__look--logo{margin-right:1.2rem;fill:#3035c3;-webkit-transition:fill .2s linear;-o-transition:fill .2s linear;transition:fill .2s linear}.programs__look--text{font-weight:800;color:#3035c3;text-decoration:none;-webkit-transition:color .2s linear;-o-transition:color .2s linear;transition:color .2s linear}.license{padding:4rem 0 8rem;color:#fff}.license__inner{display:-webkit-box;display:-ms-flexbox;display:flex;background:#3035c3;height:44.1rem;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-shadow:0 10px 40px 0 #495fd338;box-shadow:0 10px 40px 0 #495fd338;border-radius:20px}.license__photo{position:relative;left:-3%;top:-8%;max-width:66rem;width:100%}.app__img img,.license__photo img{border-radius:1.5rem}.license__content{position:relative;text-align:left}.license__title{font-size:1.4rem;font-weight:800;line-height:2rem;margin-bottom:2.5rem}.license__text{width:70%;line-height:2.4rem;margin-bottom:3.2rem}.partners{padding:5.2rem 0 14rem}.partners__inner,.partners__slick{min-width:0;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.partners__slick{display:-webkit-box!important;display:-ms-flexbox!important;display:flex!important}.partners__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.banner{color:#23283b;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:10rem}.banner__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:url(../img/banner.jpg) center no-repeat;border-radius:5rem;padding:10rem 7rem}.banner__title{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;text-align:left;font-weight:800;padding:0 3rem;font-size:3.6rem;line-height:4.7rem;margin-bottom:3rem;background:#fff;border-radius:1rem}.banner__text{color:#fff}.banner__button{position:relative;margin-top:3rem}.course{font-family:"Lato",sans-serif;text-align:left}.course__level{padding:5.2rem 0 4rem;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-webkit-transition:all .2s linear;-o-transition:all .2s linear;transition:all .2s linear}.course__level--item{color:rgba(48,53,195,.5);font-weight:700;font-size:1.8rem;padding:0 4.3rem;-webkit-transition:color .1s linear;-o-transition:color .1s linear;transition:color .1s linear;cursor:pointer}.course__level--item:hover{color:#3035c3}.course__level--item.active{color:#e6514a;cursor:default;padding:0}.course__level--item.active::after{background:#e6514a;content:"";display:block;position:relative;left:-1rem;margin:0 auto;width:120%;height:.2rem;margin-top:2rem;padding-left:1rem}.course__level--title{display:-webkit-box;display:-ms-flexbox;display:flex}.course__detail{display:none}.course__content{background:#fff;display:none;border-radius:1rem;padding:4.8rem 5.2rem;-webkit-box-shadow:0 10px 40px 0 #000b4438;box-shadow:0 10px 40px 0 #000b4438}.course__content.active{display:block}.course__title{color:#3035c3;text-align:left;text-transform:uppercase;width:80%;line-height:3.2rem;font-size:2.4rem;font-weight:800}.course__text{padding-top:2.4rem;font-family:"Lato",sans-serif;text-align:left;line-height:2.1rem}.course__column{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:4.8rem}.course__column__item{width:30%}.course__column--title{text-align:left;text-transform:uppercase;font-size:2rem;font-weight:800;margin-bottom:2.4rem}.course__list{text-align:left}.course__list--item{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:1.6rem}.course__list--item--icon{position:absolute}.course__list--item--title{margin-bottom:.4rem;font-weight:800}.course__list--item--text{line-height:1.8rem}.course__list--item--content{margin-left:3.2rem}.course__graf--item{margin-bottom:1.6rem}.course__graf--content{display:-webkit-box;display:-ms-flexbox;display:flex;margin-bottom:.8rem}.course__graf--perc{color:#e6514a;margin-left:.4rem;font-weight:800}.course__graf--line::after,.course__graf--line::before{content:"";display:block;position:relative;border-radius:1rem;height:4px}.course__graf--line::after{background:#dedeff;z-index:1;width:100%}.course__graf--line::before{background:#e6514a;top:.4rem;z-index:2;width:0}.course__graf--line__20::before{width:20%}.course__graf--line__30::before{width:30%}.course__graf--line__40::before{width:40%}.course__graf--line__50::before{width:50%}.course__graf--line__60::before{width:60%}.course__graf--line__70::before{width:70%}.course__graf--line__80::before{width:80%}.course__graf--line__90::before{width:90%}.course__graf--line__10::before{width:10%}.course__graf--line__100::before{width:100%}.app{padding:5rem 0 10rem}.app,.app__content,.app__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.app__inner{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.app__content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;text-align:left}.app__title{font-weight:800;font-size:2.4rem}.app__text{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding-top:3rem;max-width:650px}.app__img img{max-width:450px;width:100%}.start{text-align:left;color:#fff}.start__inner{background:url(https://i.imgur.com/ledneWn.png) center/cover;padding:8rem 7rem;border-radius:2rem;-webkit-box-shadow:0 10px 40px 0 #495fd338;box-shadow:0 10px 40px 0 #495fd338}.footer .footer__item--nav,.start__content{width:50%}.start__suptitle{font-family:"Lato",sans-serif;margin-left:5.2rem}.start__suptitle::before{background:#e6514a;content:"";display:block;position:relative;margin-left:-5.2rem;top:.8rem;width:4rem;height:.1rem}.start__title{font-weight:800;font-size:4rem;line-height:5.2rem;padding:2rem 0 3.8rem}.start__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:1.4rem}.start__item--number{color:#e6514a;font-size:2.4rem;font-weight:800;margin-right:1.6rem}.start__item--text{line-height:2.4rem;font-size:1.6rem}.advance{padding:8rem 0}.advance__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;margin-bottom:8rem}.advance__item{width:33.33%}.advance__photo{display:block;position:relative;width:12rem;height:12rem;margin:0 auto}.advance__icon{position:absolute;padding:1rem;border-radius:50%;-webkit-box-shadow:0 10px 24px 0 #495fd31f;box-shadow:0 10px 24px 0 #495fd31f}.advance__icon__inner{padding:2.5rem;border:.2rem solid #3035c3;background:#dedeff;border-radius:50%}.advance__icon__photo{width:5rem;height:5rem}.advance__icon__photo--1{background:url(https://i.imgur.com/PbBewlt.png) center no-repeat}.advance__icon__photo--2{background:url(https://i.imgur.com/8yrtPHz.png) center no-repeat}.advance__icon__photo--3{background:url(https://i.imgur.com/9LdJ5V5.png) center no-repeat}.advance__title{font-weight:800;font-size:1.8rem;padding:2rem 0 1.2rem}.advance__text{font:1.6rem/2.4rem "Lato",sans-serif;margin:0 auto;width:50%}.question{background:url(https://i.imgur.com/iKONz3C.png) center no-repeat;background-size:cover;-o-object-fit:cover;object-fit:cover;padding:10rem 1rem}.question__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.question__content{color:#fff;text-align:left;width:65%}.question__title{font-weight:800;font-size:4.8rem;margin-bottom:2.8rem}.question__text{font:1.6rem/2.4rem "Lato",sans-serif;width:80%}.question__button{display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;right:0;top:40%}.footer{padding:2rem 13.5rem;background:#3035c3;color:#fff;text-align:left}.footer__bottom,.footer__header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__header{border-bottom:.1rem solid rgba(255,255,255,.3);padding-bottom:2.8rem}.footer__bottom{padding-top:1rem}.footer__item{width:20%}.footer__item--link{width:100%}.footer__item--nav{display:-webkit-box;display:-ms-flexbox;display:flex;margin-right:2rem}.footer__logo{margin-bottom:2.6rem}.footer__notification{font-family:"Lato",sans-serif;width:70%;line-height:1.8rem}.footer__nav{margin-right:6.3rem}.footer__nav--link{display:block;color:#fff;text-decoration:none;font-weight:700;-webkit-transition:color .2s linear;-o-transition:color .2s linear;transition:color .2s linear}.footer__nav--link:hover{color:#e6514a}.footer__addres--item,.footer__nav--link{margin-bottom:2.4rem}.footer__addres--title{font-weight:700;margin-bottom:1.2rem}.footer__addres--text{line-height:1.7rem;width:70%}.footer__information{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.footer__information--item{color:#fff;text-decoration:none;margin-left:2.4rem;cursor:pointer}.footer__information--item:hover{text-decoration:underline}.modal{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%;height:100%;background:0 0;position:fixed;top:0;left:0;z-index:1010;-webkit-transform:translateY(-44.5%) scale(0);-ms-transform:translateY(-44.5%) scale(0);transform:translateY(-44.5%) scale(0);-webkit-transition:all .4s ease-in-out;-o-transition:all .4s ease-in-out;transition:all .4s ease-in-out}.modal.active{background:rgba(35,40,59,.7);-webkit-transform:translateY(0) scale(1);-ms-transform:translateY(0) scale(1);transform:translateY(0) scale(1)}.modal__title{font-weight:700;font-size:3.2rem;color:#3035c3;margin-bottom:1.2rem}.modal__warn{font:1.2rem/1.8rem "Lato",sans-serif;margin-bottom:3.6rem}.modal__item--inner{position:relative;padding:5.2rem 7rem 5.2rem 5.2rem}.modal__contact--title{font-weight:700;margin-bottom:.8rem}.modal__contact--form{margin-bottom:1.6rem}.modal__contact--input{border:.1rem solid rgba(35,40,59,.1);font-family:"Lato",sans-serif;width:30rem;border-radius:4rem;padding:1.7rem 2rem;-webkit-transition:all .2s linear;-o-transition:all .2s linear;transition:all .2s linear}.modal__contact--input:focus{border:.1rem solid rgba(230,81,74,.5)}.modal__button{padding-top:1.6rem}.modal__close{position:absolute;border:0;background:0 0;cursor:pointer;top:2.2rem;right:2.2rem}.modal__close:hover path{fill:red}.modal__close--img{fill:#23283b;-webkit-transition:fill .1s linear;-o-transition:fill .1s linear;transition:fill .1s linear}.modal__content{background:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;max-width:77rem;border-radius:2.1rem}.button__bigs--modal{margin-left:0}.burger{display:none;width:50px;height:30px;cursor:pointer;color:transparent;background:0 0;font-size:0;padding:0;border:0;position:absolute;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);right:75px;z-index:1000}.burger::after,.burger::before{display:block;height:6px}.burger::after,.burger::before,.burger__item{background:#23283b;width:100%;-webkit-transition:all .3s ease 0s;-o-transition:all .3s ease 0s;transition:all .3s ease 0s}.burger__item{display:block;height:6px;position:relative}.burger::after,.burger::before{content:"";position:absolute;left:0;z-index:1}.burger::after{top:0}.burger::before{bottom:0}.burger._active span{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0)}.burger._active.burger:after{top:40%;background:#23283b;-webkit-transform:translate(0,-50%) rotate(-45deg);-ms-transform:translate(0,-50%) rotate(-45deg);transform:translate(0,-50%) rotate(-45deg)}.burger._active.burger:before{top:30%;background:#23283b;-webkit-transform:translate(0,50%) rotate(45deg);-ms-transform:translate(0,50%) rotate(45deg);transform:translate(0,50%) rotate(45deg)}@media (max-width:1080px){.nav{padding:0}}@media (max-width:991px){.slick-dots{left:45%}.header{padding:0;height:8rem}.header__button,.header__top{display:none}.header__logo{margin-left:2rem}.header__nav{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:fixed;top:-100%;z-index:100;width:100%;height:100%;background-color:#fff;padding:6rem 3rem 3rem;-webkit-transition:top .3s ease 0s;-o-transition:top .3s ease 0s;transition:top .3s ease 0s;overflow:auto;-webkit-box-shadow:0 5px 20px rgba(28,28,28,.1);box-shadow:0 5px 20px rgba(28,28,28,.1)}.header__nav::before{content:"";width:100%;position:fixed;top:0;left:0;height:80px;z-index:2;background:#fff;-webkit-box-shadow:0 5px 20px rgba(0,11,68,.1);box-shadow:0 5px 20px rgba(0,11,68,.1)}.header__nav._active{top:0;color:#000}.header__nav_link{text-align:center;margin-bottom:20px;padding-top:20px;width:100%;color:#000;font-weight:700;font-size:18px;-webkit-transition:color .2s linear;-o-transition:color .2s linear;transition:color .2s linear}.nav{padding:0;display:none}.nav__link{margin-left:1.5rem;width:100%;margin:0 auto;font-size:20px;padding:5rem 0}.button__bigs{padding:1em 4.1em;width:auto}.button__big{padding:1em 2.4em}.intro{padding-bottom:25rem}.intro__photography{padding-top:5rem;max-width:46rem;background:0 0}.intro__suptitle{font-size:1.2rem}.intro__title{font-size:2.8rem;padding-bottom:3rem}.programs__look--text{font-size:1.2rem}.programs__price{min-height:19rem;padding:3.6rem 0 0}.programs__item{margin-right:.5rem}.programs__pay{font-size:1.8rem}.programs__text{font-size:1.6rem}.programs__look--logo{margin-right:.3rem}.license__photo{left:1%}.license__content{left:2%}.license__title{margin-bottom:1rem;line-height:3.2rem}.license__text{width:80%;font-size:1.2rem}.partners__item{width:16%}.footer{padding:2rem 1rem 1rem}.modal__item__photo{display:none}.modal__content{max-width:50rem}.modal__item--inner{padding:5.2rem 1.2rem 1.2rem 7.2rem}.burger{display:block}}@media (max-width:800px){.slick-dots{left:38%}.number__item__footer,.social{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.social{margin-bottom:5rem}.number__item__footer{width:100%}.number__footer{-ms-flex-wrap:wrap;flex-wrap:wrap}.button{margin:0 auto}.button__bigs{text-align:center;width:-webkit-max-content;width:-moz-max-content;width:max-content}.button__big{padding:.87em 1.75em;text-align:center}.intro{display:block;text-align:center;padding-bottom:6rem;padding-top:15rem}.intro__photo{display:block;position:relative;height:27.6rem;margin-top:5.2rem}.intro__photography{margin:0 auto;padding-top:0;width:32.7rem;height:27.6rem;-o-object-fit:cover;object-fit:cover;border-radius:1.2rem}.intro__suptitle{font-size:1.6rem;padding-top:0}.intro__title{width:100%;padding-bottom:4rem}.intro__title,.section__title{font-size:3.6rem}.section__top{padding-top:6rem}.programs__inner{display:block}.programs__item{width:100%;margin:0 1.5rem}.programs__price{margin-right:3rem}.programs__list{padding-bottom:3.2rem}.programs__look{display:block}.programs__footer{position:static;left:30%;margin-bottom:6rem}.programs__look--text{position:relative;top:-3px}.license__inner{margin:0 1rem}.license__photo{display:block;position:relative;top:-8rem;left:0}.license__photo img{width:70%}.license__content{left:0;margin:0 1.6rem;padding-bottom:4.8rem}.license__inner{display:block;height:auto}.partners{padding-bottom:8rem}.banner{padding-bottom:3rem}.banner__inner{display:block;margin:0 1rem;padding:10rem 1rem}.banner__title{text-align:center;width:100%;font-size:1.8rem;margin-bottom:3.2rem;line-height:3.2rem}.banner__button,.modal.active{left:0}.course__content{padding:3.2rem 1.4rem}.course__title{width:100%;font-size:2rem}.course__level{-ms-flex-wrap:wrap;flex-wrap:wrap}.course__level--item.active::after{left:0;width:100%}.course__level--title{font-size:1.6rem}.course__level--item{padding:0}.course__column{display:block}.course__column__item{width:100%}.app,.app__content,.app__inner{display:-webkit-box;display:-ms-flexbox;display:flex}.app{padding:5rem 0}.app__content,.app__inner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.app__inner{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.app__content{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;text-align:left}.app__title{font-weight:800;font-size:1.8rem}.app__text{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding-top:1rem;font-size:1.2rem;max-width:650px;margin-bottom:2rem}.start__inner{padding:6rem 3.6rem}.start__content{width:100%}.start__suptitle,.start__title{text-align:center}.start__suptitle::before{margin-left:0}.advance__inner{display:block}.advance__item{width:100%;margin-bottom:4.2rem}.advance__text{width:80%}.question__inner{display:block}.question__content{width:100%;text-align:center}.question__text{width:100%;margin-bottom:5.2rem}.question__button{display:block;position:static}.footer__header{display:block;text-align:center}.footer__item{width:100%}.footer__item--nav{display:-webkit-box;display:-ms-flexbox;display:flex;text-align:left;margin-bottom:5.2rem;width:100%!important}.footer__nav{margin-right:0}.footer__notification{margin-bottom:5.2rem;width:100%}.footer__addres--text{width:100%}.footer__bottom{display:block}.footer__information{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer__information--item{margin-bottom:2.4rem;width:100%;text-align:center}.modal{-webkit-transform:translateY(0) scale(1);-ms-transform:translateY(0) scale(1);transform:translateY(0) scale(1);left:100%}.modal__item--inner{padding:3.2rem 0;overflow:auto}.modal__warn{margin-bottom:1rem}.modal__content{border-radius:1rem}.modal__close{top:3.9rem;right:1.5rem}.modal__close svg{width:20px;height:20px}}@media (max-width:450px){.slick-dots{left:16%}}@media (max-width:320px){.slick-dots{left:0;margin:.5rem}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */